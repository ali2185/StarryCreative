<html>
<head>
  <meta charset= "utf-8"/>
  <title> Starry Summer Vote Results </title>
  <link rel="stylesheet" href="public/css/vote.css">
    <!-- Load d3.js -->
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
  </head>
  
  <header id="header background" style="width:100%;
	height:300px;
	background: url(/public/images/voicetone.jpg)">
		<div class="logo">
		</div>
	</header>
  <footer id="footer"> 
		<p>Â© 2023 Starry Summer. All rights reserved.</p> 
	</footer>


  <body>
    <h2>See the results - what is most popular?!</h2>
    <br>
  
     <div class="row">

     <div class="column">
     <h3>Character Acting</h3>
    
    <div id="my_dataviz_1"></div>
    </div>
  
    <div class="column">
    <h3>Commercial</h3>
    
    <div id="my_dataviz_2"></div>
    </div>
     
    <div class="column">
    <h3>AudioBooks</h3>
    
    <div id="my_dataviz_3"></div>
    </div>
  </div>
  
    <% if (ratings) { %>
  
    <script>
                var ratings = <%- JSON.stringify(ratings) %>;
  
          // set the dimensions and margins of the graph
          var width = 250
            height = 250
            margin = 40
  
          // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
          var radius = Math.min(width, height) / 2 - margin
  
          for (var el of ['1','2','3']){
          // append the svg object to the div called 'my_dataviz'
          var svg = d3.select("#my_dataviz_"+el)
          .append("svg")
            .attr("width", width)
            .attr("height", height)
          .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
  
          var data =ratings[el];
  
          // set the color scale
          var color = d3.scaleOrdinal()
            .domain(data)
            .range(d3.schemeSet2);
  
          // Compute the position of each group on the pie:
          var pie = d3.pie()
          .value(function(d) {return d.value; })
          var data_ready = pie(d3.entries(data))
  
  
         // shape helper to build arcs:
        var arcGenerator = d3.arc()
          .innerRadius(0)
          .outerRadius(radius)
  
  
      // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
      svg
        .selectAll('mySlices')
        .data(data_ready)
        .enter()
        .append('path')
          .attr('d', arcGenerator)
          .attr('fill', function(d){ return(color(d.data.key)) })
          .attr("stroke", "black")
          .style("stroke-width", "2px")
          .style("opacity", 0.7)
  
      // Now add the annotation. Use the centroid method to get the best coordinates
      svg
        .selectAll('mySlices')
        .data(data_ready)
        .enter()
        .append('text')
        .text(function(d){  if (d.data.value !=0) {return d.data.key}else{return ""} })
        .attr("transform", function(d) { return "translate(" + arcGenerator.centroid(d) + ")";  })
        .style("text-anchor", "middle")
        .style("font-size", 17)
  
          }
    </script>
  
    <% }else { %> <% } %>
    <div class="container">

      <p> Insert table in here</p>
    </div>



  </body>
  </html>